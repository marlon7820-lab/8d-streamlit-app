import streamlit as st
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment, PatternFill
from openpyxl.utils import get_column_letter
import datetime

# ---------------------------
# Page config and branding
# ---------------------------
st.set_page_config(
    page_title="8D Training App",
    page_icon="https://raw.githubusercontent.com/marlon7820-lab/8d-streamlit-app/refs/heads/main/IMG_7771%20Small.png",
    layout="wide"
)

# Hide Streamlit default menu, header, and footer
st.markdown("""
<style>
#MainMenu {visibility: hidden;}
footer {visibility: hidden;}
header {visibility: hidden;}
</style>
""", unsafe_allow_html=True)

# ---------------------------
# Language selection
# ---------------------------
lang = st.selectbox("Select Language / Seleccionar Idioma", ["English", "Espa√±ol"])

lang_map = {"English": "en", "Espa√±ol": "es"}

t = {
    "en": {
        "title": "üìë 8D Training App",
        "report_date": "üìÖ Report Date",
        "prepared_by": "‚úçÔ∏è Prepared By",
        "save_button": "üíæ Save 8D Report",
        "download_button": "üì• Download XLSX",
        "steps": [
            "D1: Concern Details",
            "D2: Similar Part Considerations",
            "D3: Initial Analysis",
            "D4: Implement Containment",
            "D5: Final Analysis",
            "D6: Permanent Corrective Actions",
            "D7: Countermeasure Confirmation",
            "D8: Follow-up Activities (Lessons Learned / Recurrence Prevention)"
        ],
        "guidance": [
            "Describe the customer concerns clearly. Include what the issue is, where it occurred, when, and any supporting data.",
            "Check for similar parts, models, generic parts, other colors, opposite hand, front/rear, etc. to see if issue is recurring or isolated.",
            "Perform an initial investigation to identify obvious issues, collect data, and document initial findings.",
            "Define temporary containment actions to prevent the customer from seeing the problem while permanent actions are developed.",
            "Use 5-Why analysis to determine the root cause. Separate by Occurrence (why it happened) and Detection (why it wasn‚Äôt detected). Add more Whys if needed.",
            "Define corrective actions that eliminate the root cause permanently and prevent recurrence.",
            "Verify that corrective actions effectively resolve the issue long-term.",
            "Document lessons learned, update standards, procedures, FMEAs, and training to prevent recurrence."
        ],
        "examples": [
            "Example: Customer reported static noise in amplifier during end-of-line test at Plant A.",
            "Example: Same speaker type used in another radio model; different amplifier colors; front vs. rear audio units.",
            "Example: Visual inspection of solder joints, initial functional tests, checking connectors.",
            "Example: 100% inspection of amplifiers before shipment; use of temporary shielding; quarantine of affected batches.",
            "Example: Occurrence: Cold solder joint ‚Üí Solder temp too low ‚Üí Operator didn‚Äôt follow profile ‚Üí Unclear instructions ‚Üí No visual check. Detection: QA missed joint ‚Üí Checklist incomplete ‚Üí No automated test ‚Üí Batch not tested ‚Üí Early warning not tracked.",
            "Example: Update soldering process, retrain operators, update work instructions, add automated inspection.",
            "Example: Functional tests on corrected amplifiers, accelerated life testing, monitoring first production runs.",
            "Example: Update SOPs, PFMEA, work instructions, employee training to prevent recurrence."
        ]
    },
    "es": {
        "title": "üìë App de Entrenamiento 8D",
        "report_date": "üìÖ Fecha del Reporte",
        "prepared_by": "‚úçÔ∏è Preparado Por",
        "save_button": "üíæ Guardar Reporte 8D",
        "download_button": "üì• Descargar XLSX",
        "steps": [
            "D1: Detalles de la Preocupaci√≥n",
            "D2: Consideraciones de Piezas Similares",
            "D3: An√°lisis Inicial",
            "D4: Implementar Contenci√≥n",
            "D5: An√°lisis Final",
            "D6: Acciones Correctivas Permanentes",
            "D7: Confirmaci√≥n de Contramedidas",
            "D8: Actividades de Seguimiento (Lecciones Aprendidas / Prevenci√≥n de Recurrencia)"
        ],
        "guidance": [
            "Describa claramente las preocupaciones del cliente. Incluya qu√© es el problema, d√≥nde ocurri√≥, cu√°ndo y cualquier dato de soporte.",
            "Verifique piezas similares, modelos, piezas gen√©ricas, otros colores, mano opuesta, frente/atr√°s, etc. para ver si el problema es recurrente o aislado.",
            "Realice una investigaci√≥n inicial para identificar problemas obvios, recopile datos y documente hallazgos iniciales.",
            "Defina acciones de contenci√≥n temporales para evitar que el cliente vea el problema mientras se desarrollan acciones permanentes.",
            "Use el an√°lisis de 5 porqu√©s para determinar la causa ra√≠z. Separe por Ocurrencia (por qu√© ocurri√≥) y Detecci√≥n (por qu√© no se detect√≥). Agregue m√°s Porqu√©s si es necesario.",
            "Defina acciones correctivas que eliminen permanentemente la causa ra√≠z y prevengan recurrencia.",
            "Verifique que las acciones correctivas resuelvan efectivamente el problema a largo plazo.",
            "Documente lecciones aprendidas, actualice est√°ndares, procedimientos, FMEAs y capacitaci√≥n para prevenir recurrencia."
        ],
        "examples": [
            "Ejemplo: El cliente report√≥ ruido est√°tico en el amplificador durante la prueba final en la Planta A.",
            "Ejemplo: Mismo tipo de altavoz usado en otro modelo de radio; diferentes colores de amplificador; unidades de audio delanteras vs traseras.",
            "Ejemplo: Inspecci√≥n visual de soldaduras, pruebas funcionales iniciales, verificaci√≥n de conectores.",
            "Ejemplo: Inspecci√≥n 100% de amplificadores antes del env√≠o; uso de blindaje temporal; cuarentena de lotes afectados.",
            "Ejemplo: Ocurrencia: Soldadura fr√≠a ‚Üí Temperatura baja ‚Üí Operador no sigui√≥ perfil ‚Üí Instrucciones poco claras ‚Üí Sin verificaci√≥n visual. Detecci√≥n: QA pas√≥ por alto la uni√≥n ‚Üí Lista de verificaci√≥n incompleta ‚Üí Sin prueba automatizada ‚Üí Lote no probado ‚Üí Se√±al temprana no rastreada.",
            "Ejemplo: Actualizar proceso de soldadura, capacitar operadores, actualizar instrucciones de trabajo, agregar inspecci√≥n automatizada.",
            "Ejemplo: Pruebas funcionales en amplificadores corregidos, pruebas de vida aceleradas, monitoreo de primeras corridas de producci√≥n.",
            "Ejemplo: Actualizar SOPs, PFMEA, instrucciones de trabajo, capacitaci√≥n de empleados para prevenir recurrencia."
        ]
    }
}[lang_map[lang]]

# ---------------------------
# Session state
# ---------------------------
if "report_date" not in st.session_state:
    st.session_state.report_date = datetime.datetime.today().strftime("%B %d, %Y")
if "prepared_by" not in st.session_state:
    st.session_state.prepared_by = ""
if "answers" not in st.session_state:
    st.session_state.answers = {step: "" for step in t["steps"]}
if "d5_occ" not in st.session_state:
    st.session_state.d5_occ = [""] * 5
if "d5_det" not in st.session_state:
    st.session_state.d5_det = [""] * 5

# ---------------------------
# Header
# ---------------------------
st.markdown(f"<h1 style='text-align: center; color: #1E90FF;'>{t['title']}</h1>", unsafe_allow_html=True)

# ---------------------------
# Report info
# ---------------------------
st.subheader(t["report_date"])
st.session_state.report_date = st.text_input("", value=st.session_state.report_date)
st.subheader(t["prepared_by"])
st.session_state.prepared_by = st.text_input("", value=st.session_state.prepared_by)

# ---------------------------
# Tabs
# ---------------------------
tabs = st.tabs(t["steps"])
for i, step in enumerate(t["steps"]):
    with tabs[i]:
        st.markdown(f"### {step}")
        st.info(f"**Guidance:** {t['guidance'][i]}\n\nüí° **Example:** {t['examples'][i]}")

        # D5 interactive 5-Why
        if "D5" in step:
            st.markdown("#### Occurrence Analysis")
            for idx in range(len(st.session_state.d5_occ)):
                st.session_state.d5_occ[idx] = st.text_input(f"Occurrence Why {idx+1}", value=st.session_state.d5_occ[idx], key=f"d5_occ_{idx}")

            st.markdown("#### Detection Analysis")
            for idx in range(len(st.session_state.d5_det)):
                st.session_state.d5_det[idx] = st.text_input(f"Detection Why {idx+1}", value=st.session_state.d5_det[idx], key=f"d5_det_{idx}")

            # Combine for storage
            st.session_state.answers[step] = (
                "Occurrence:\n" + "\n".join([w for w in st.session_state.d5_occ if w.strip()]) +
                "\n\nDetection:\n" + "\n".join([w for w in st.session_state.d5_det if w.strip()])
            )
        else:
            st.session_state.answers[step] = st.text_area(f"Your Answer for {step}", value=st.session_state.answers[step], key=f"ans_{step}")

# ---------------------------
# Save to Excel
# ---------------------------
if st.button(t["save_button"]):
    wb = Workbook()
    ws = wb.active
    ws.title = "NPQP 8D Report"

    # Title
    ws.merge_cells("A1:C1")
    ws["A1"] = t["title"]
    ws["A1"].font = Font(size=14, bold=True)
    ws["A1"].alignment = Alignment(horizontal="center", vertical="center")
    ws.row_dimensions[1].height = 25

    # Report info
    ws["A3"] = t["report_date"]
    ws["B3"] = st.session_state.report_date
    ws["A4"] = t["prepared_by"]
    ws["B4"] = st.session_state.prepared_by

    # Headers
    headers = ["Step", "Your Answer", "Root Cause"]
    header_fill = PatternFill(start_color="C0C0C0", end_color="C0C0C0", fill_type="solid")
    row = 6
    for col, header in enumerate(headers, start=1):
        cell = ws.cell(row=row, column=col, value=header)
        cell.font = Font(bold=True)
        cell.alignment = Alignment(horizontal="center", vertical="center", wrap_text=True)
        cell.fill = header_fill

    # Content
    row = 7
    for step in t["steps"]:
        ans = st.session_state.answers.get(step, "")
        ws.cell(row=row, column=1, value=step)
        ws.cell(row=row, column=2, value=ans)
        ws.cell(row=row, column=3, value="" if step != t["steps"][0] else ans)  # Only D1 extra

        for col in range(1, 4):
            ws.cell(row=row, column=col).alignment = Alignment(wrap_text=True, vertical="top")
        row += 1

    # Column widths
    for col in range(1, 4):
        ws.column_dimensions[get_column_letter(col)].width = 40

    xlsx_file = "NPQP_8D_Report.xlsx"
    wb.save(xlsx_file)
    st.success("‚úÖ NPQP 8D Report saved successfully.")
    with open(xlsx_file, "rb") as f:
        st.download_button(t["download_button"], f, file_name=xlsx_file)
